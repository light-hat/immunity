name: Build and Deploy a new version

on:
  push:
    branches: [ master ]

jobs:

  read_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Read version
        id: set_version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_OUTPUT

  build_and_push:
    needs: read_version
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          stage: server
          tags: |
            l1ghth4t/immunity:${{ needs.read_version.outputs.version }}
            l1ghth4t/immunity:latest
          push: true

  build_and_push_worker:
    needs: read_version
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          stage: worker
          tags: |
            l1ghth4t/immunity-worker:${{ needs.read_version.outputs.version }}
            l1ghth4t/immunity-worker:latest
          push: true

  deploy_staging:
    runs-on: ubuntu-latest
    needs: [build_and_push, build_and_push_worker]
    environment: staging
    steps:
      - users: actions/checkout@v4
      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_STAGING }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Create dynamic inventory
        run: |
          cat > inventory.ini <<EOF
          [web]
          ${{ secrets.SERVER_IP }} app_user={{ secrets.SSH_USER }} postgres_user={{ secrets.DB_USER }} postgres_password={{ secrets.DB_PASSWORD }}
          EOF

      - name: Run playbook
        run: ansible-playbook -i inventory.ini ansible/deploy_staging.yml
